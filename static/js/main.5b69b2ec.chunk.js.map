{"version":3,"sources":["redux/reducers/quiz.js","controller/api.js","components/Loading/Loading.js","views/Home/Home.js","views/Quiz/Quiz.js","views/Analysis/Analysis.js","reportWebVitals.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["initialState","questions","options","answers","total","min","sec","SET_QUESTIONS_REQUEST","SET_ANSWERS_REQUEST","SET_TIME","RESET_ALL","RESET_ANSWERS","setQuestionsRequestAction","data","type","reducer","state","action","length","getQuizData","query","concat","amount","category","difficulty","axios","get","Loading","className","CircularProgress","color","Home","history","useState","isLoading","setIsLoading","dispatch","useDispatch","randomItem","sort","a","b","Math","random","onClick","api","then","res","results","map","result","selectArr","incorrect_answers","correct_answer","push","catch","e","console","log","Quiz","timer","setQuestions","totalQuest","setTotalQuest","setAnswers","activeStep","setActiveStep","selectedOpt","setSelectedOpt","isShowResult","setIsShowResult","setOptions","setMin","setSec","time","useRef","quiz","useSelector","useEffect","setInterval","parseInt","current","clearInterval","setTimeRequestAction","handleOption","target","value","handleNext","prevStep","alert","question","idx","step","style","background","borderRadius","padding","marginRight","dangerouslySetInnerHTML","__html","option","name","onChange","fontSize","Analysis","correctCnt","setCorrectCnt","pieData","setPieData","COLORS","cnt","i","startQuiz","PieChart","width","height","Pie","dataKey","innerRadius","outerRadius","border","entry","index","Cell","fill","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","combinedReducer","store","createStore","ReactDOM","render","basename","process","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.5b69b2ec.chunk.js","sourcesContent":["export const initialState = {\r\n  questions: null,\r\n  options: null,\r\n  answers: null,\r\n  total: null,\r\n  min: null,\r\n  sec: null,\r\n};\r\n\r\nexport const SET_QUESTIONS_REQUEST = \"SET_QUESTIONS_REQUEST\";\r\nexport const SET_ANSWERS_REQUEST = \"SET_ANSWERS_REQUEST\";\r\nexport const SET_TIME = \"SET_TIME\";\r\nexport const RESET_ALL = \"RESET_ALL\";\r\nexport const RESET_ANSWERS = \"RESET_ANSWERS\";\r\n\r\nexport const setQuestionsRequestAction = (data) => ({\r\n  type: SET_QUESTIONS_REQUEST,\r\n  data,\r\n});\r\nexport const setAnswersRequestAction = (data) => ({\r\n  type: SET_ANSWERS_REQUEST,\r\n  data,\r\n});\r\nexport const setTimeRequestAction = (data) => ({\r\n  type: SET_TIME,\r\n  data,\r\n});\r\nexport const resetAnswersRequestAction = () => ({\r\n  type: RESET_ANSWERS,\r\n});\r\nexport const resetAllRequestAction = () => ({\r\n  type: RESET_ALL,\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_QUESTIONS_REQUEST:\r\n      return {\r\n        ...state,\r\n        questions: action.data.questions,\r\n        total: action.data.questions.length,\r\n        options: action.data.options,\r\n      };\r\n    case SET_ANSWERS_REQUEST:\r\n      return {\r\n        ...state,\r\n        answers: action.data,\r\n      };\r\n    case SET_TIME:\r\n      return {\r\n        ...state,\r\n        min: action.data.min,\r\n        sec: action.data.sec,\r\n      };\r\n    case RESET_ALL:\r\n      return {\r\n        ...state,\r\n        questions: null,\r\n        options: null,\r\n        answers: null,\r\n        total: null,\r\n        min: null,\r\n        sec: null,\r\n      };\r\n    case RESET_ANSWERS:\r\n      return {\r\n        ...state,\r\n        answers: null,\r\n        min: null,\r\n        sec: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import axios from \"axios\";\r\nconst requestURL = \"https://opentdb.com/api.php\";\r\n\r\nexport function getQuizData(data) {\r\n  let query = requestURL.concat(`?amount=${data.amount}`);\r\n  if (data.category) {\r\n    query = query.concat(`&category=${data.category}`);\r\n  }\r\n  if (data.difficulty) {\r\n    query = query.concat(`&difficulty=${data.difficulty}`);\r\n  }\r\n  query = query.concat(`&type=multiple`);\r\n  return axios.get(query);\r\n}\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <div className=\"center\">\r\n      <CircularProgress color=\"secondary\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setQuestionsRequestAction } from \"../../redux/reducers/quiz.js\";\r\nimport \"../Home/Home.css\";\r\nimport \"../../assets/css/global.css\";\r\nimport * as api from \"../../controller/api.js\";\r\nimport Loading from \"../../components/Loading/Loading.js\";\r\n\r\nconst Home = ({ history }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const startQuiz = () => {\r\n    setIsLoading(true);\r\n    api\r\n      .getQuizData({ amount: 10 })\r\n      .then((res) => {\r\n        const results = res.data.results;\r\n        let options = [];\r\n        results.map((result) => {\r\n          const selectArr = [\r\n            ...result.incorrect_answers,\r\n            result.correct_answer,\r\n          ];\r\n          options = [...options, randomItem(selectArr)];\r\n        });\r\n        dispatch(setQuestionsRequestAction({ questions: results, options }));\r\n        setIsLoading(false);\r\n        history.push(\"/quiz\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e, \"e\");\r\n      });\r\n  };\r\n\r\n  const randomItem = (options) => {\r\n    return options.sort(function (a, b) {\r\n      return 0.5 - Math.random();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"center\">\r\n      {isLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <div className=\"center\">\r\n          <button className=\"quizButton\" onClick={startQuiz}>\r\n            <span className=\"shadow\"></span>\r\n            <span className=\"edge\"></span>\r\n            <span className=\"phrase\">Let's Quiz!</span>\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setAnswersRequestAction,\r\n  setTimeRequestAction,\r\n} from \"../../redux/reducers/quiz.js\";\r\nimport * as api from \"../../controller/api.js\";\r\nimport \"../../assets/css/global.css\";\r\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\r\nimport Loading from \"../../components/Loading/Loading.js\";\r\n\r\nconst Quiz = ({ history }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [questions, setQuestions] = useState(null);\r\n  const [totalQuest, setTotalQuest] = useState(0);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [selectedOpt, setSelectedOpt] = useState(\"\");\r\n  const [isShowResult, setIsShowResult] = useState(false);\r\n  const [options, setOptions] = useState(null);\r\n  const [min, setMin] = useState(0);\r\n  const [sec, setSec] = useState(0);\r\n  const time = useRef(0);\r\n  let timer;\r\n\r\n  const dispatch = useDispatch();\r\n  const { quiz } = useSelector((state) => ({ quiz: state.quiz }));\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    if (!quiz.questions && !quiz.total && !quiz.options) {\r\n      history.push(\"/\");\r\n      return;\r\n    } else {\r\n      setQuestions(quiz.questions);\r\n      setTotalQuest(quiz.total);\r\n      setOptions(quiz.options);\r\n    }\r\n    setIsLoading(false);\r\n\r\n    timer = setInterval(() => {\r\n      setMin(parseInt(time.current / 60));\r\n      setSec(time.current % 60);\r\n      time.current += 1;\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isShowResult) {\r\n      dispatch(setAnswersRequestAction(answers));\r\n      dispatch(setTimeRequestAction({ min, sec }));\r\n      clearInterval(timer);\r\n    }\r\n  }, [isShowResult]);\r\n\r\n  useEffect(() => {\r\n    if (quiz.answers) {\r\n      history.push(\"/analysis\");\r\n    }\r\n  }, [quiz.answers]);\r\n\r\n  const renderQuestion = (step) => {\r\n    return (\r\n      <div className=\"quizBox\">\r\n        <div className=\"timer\">\r\n          <AccessTimeIcon />\r\n          <span className=\"defaultFontSize fontWeight\">\r\n            {min}:{sec}\r\n          </span>\r\n        </div>\r\n        <div className=\"flexBox\">\r\n          <span className=\"title\">Question {step + 1}</span>\r\n          <div className=\"category\">\r\n            <span\r\n              style={{\r\n                background: \"pink\",\r\n                borderRadius: \"8px\",\r\n                padding: \"4px 8px\",\r\n                marginRight: \"5px\",\r\n              }}\r\n            >\r\n              {questions[step].difficulty}\r\n            </span>\r\n            <span\r\n              style={{\r\n                background: \"yellow\",\r\n                borderRadius: \"8px\",\r\n                padding: \"4px 8px\",\r\n              }}\r\n              dangerouslySetInnerHTML={{ __html: questions[step].category }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"questionBox\">\r\n          <span\r\n            className=\"question\"\r\n            dangerouslySetInnerHTML={{ __html: questions[step].question }}\r\n          />\r\n          {options[step].map((option, idx) => {\r\n            return (\r\n              <div className=\"questionBox\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"option\"\r\n                  value={option}\r\n                  onChange={handleOption}\r\n                />\r\n                <span\r\n                  style={{ fontSize: \"18px\" }}\r\n                  dangerouslySetInnerHTML={{ __html: option }}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <button className=\"defaultButton\" onClick={handleNext}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleOption = (e) => {\r\n    setSelectedOpt(e.target.value);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (activeStep === totalQuest - 1) {\r\n      setAnswers([...answers, selectedOpt]);\r\n      setSelectedOpt(\"\");\r\n      setIsShowResult(true);\r\n      return;\r\n    }\r\n    if (selectedOpt) {\r\n      setActiveStep((prevStep) => prevStep + 1);\r\n      setAnswers([...answers, selectedOpt]);\r\n      setSelectedOpt(\"\");\r\n    } else {\r\n      alert(\"Please choose an answer!\");\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"center\">\r\n      {isLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          {questions?.map((question, idx) => {\r\n            return (\r\n              <div>{idx === activeStep && <>{renderQuestion(idx)}</>}</div>\r\n            );\r\n          })}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  resetAnswersRequestAction,\r\n  resetAllRequestAction,\r\n  setQuestionsRequestAction,\r\n} from \"../../redux/reducers/quiz.js\";\r\nimport { PieChart, Pie, Legend, Cell, ResponsiveContainer } from \"recharts\";\r\nimport \"../../assets/css/global.css\";\r\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\r\nimport Loading from \"../../components/Loading/Loading.js\";\r\nimport * as api from \"../../controller/api.js\";\r\n\r\nconst Analysis = ({ history }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [answers, setAnswers] = useState(null);\r\n  const [correctCnt, setCorrectCnt] = useState(0);\r\n  const [pieData, setPieData] = useState(null);\r\n\r\n  const COLORS = [\"#ff3769\", \"#5e7e9b\"];\r\n  const dispatch = useDispatch();\r\n  const { quiz } = useSelector((state) => ({ quiz: state.quiz }));\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    if (!quiz.questions && !quiz.total && !quiz.options) {\r\n      history.push(\"/\");\r\n      return;\r\n    }\r\n    let cnt = 0;\r\n    for (let i = 0; i < quiz.total; i++) {\r\n      if (quiz.answers[i] === quiz.questions[i].correct_answer) {\r\n        cnt++;\r\n      }\r\n    }\r\n    setCorrectCnt(cnt);\r\n    const data = [\r\n      { name: \"정답\", value: cnt },\r\n      { name: \"오답\", value: quiz.total - cnt },\r\n    ];\r\n    setPieData(data);\r\n    setAnswers(quiz.answers);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (answers) {\r\n      setIsLoading(false);\r\n    }\r\n  }, [answers]);\r\n\r\n  const restartQuiz = () => {\r\n    dispatch(resetAnswersRequestAction());\r\n    history.push(\"/quiz\");\r\n    return;\r\n  };\r\n\r\n  const newQuiz = () => {\r\n    dispatch(resetAllRequestAction());\r\n    startQuiz();\r\n    return;\r\n  };\r\n\r\n  const startQuiz = () => {\r\n    setIsLoading(true);\r\n    api\r\n      .getQuizData({ amount: 10 })\r\n      .then((res) => {\r\n        const results = res.data.results;\r\n        let options = [];\r\n        results.map((result) => {\r\n          const selectArr = [\r\n            ...result.incorrect_answers,\r\n            result.correct_answer,\r\n          ];\r\n          options = [...options, randomItem(selectArr)];\r\n        });\r\n        dispatch(setQuestionsRequestAction({ questions: results, options }));\r\n        setIsLoading(false);\r\n        history.push(\"/quiz\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e, \"e\");\r\n      });\r\n  };\r\n\r\n  const randomItem = (options) => {\r\n    return options.sort(function (a, b) {\r\n      return 0.5 - Math.random();\r\n    });\r\n  };\r\n\r\n  const renderPieChart = () => {\r\n    return (\r\n      <div className=\"questionBox\">\r\n        <PieChart width={200} height={200}>\r\n          <Pie\r\n            dataKey=\"value\"\r\n            data={pieData}\r\n            innerRadius={95}\r\n            outerRadius={100}\r\n            style={{ border: \"1px solid blue\" }}\r\n          >\r\n            {pieData.map((entry, index) => (\r\n              <Cell fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n          </Pie>\r\n        </PieChart>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <div className=\"center\">\r\n          <div className=\"timer\">\r\n            <AccessTimeIcon />\r\n            <span className=\"defaultFontSize fontWeight\">\r\n              {quiz.min} : {quiz.sec}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className=\"defaultFontSize fontWeight correct\">\r\n              Correct:{\" \"}\r\n            </span>\r\n            <span className=\"defaultFontSize correct\">{correctCnt}</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"defaultFontSize fontWeight wrong\">Wrong: </span>\r\n            <span className=\"defaultFontSize wrong\">\r\n              {quiz.total - correctCnt}\r\n            </span>\r\n          </div>\r\n          {pieData && renderPieChart()}\r\n          <div className=\"flexBox\">\r\n            <button className=\"defaultButton newButton\" onClick={restartQuiz}>\r\n              Restart\r\n            </button>\r\n            <button className=\"defaultButton newButton\" onClick={newQuiz}>\r\n              New Quiz\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Analysis;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\nimport quiz from \"./quiz.js\";\r\n\r\nconst rootReducer = (state, action) => {\r\n  switch (action.type) {\r\n    default: {\r\n      const combinedReducer = combineReducers({\r\n        quiz,\r\n      });\r\n      return combinedReducer(state, action);\r\n    }\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers/index.js\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  BrowserRouter,\n  HashRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"../src/views/Home/Home.js\";\nimport Quiz from \"../src/views/Quiz/Quiz.js\";\nimport Analysis from \"../src/views/Analysis/Analysis.js\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"../src/redux/store.js\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/quiz\" component={Quiz} />\n          <Route path=\"/analysis\" component={Analysis} />\n        </Switch>\n      </Router>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}